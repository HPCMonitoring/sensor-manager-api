// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("POSTGRES_URL")
  relationMode = "foreignKeys"
}

model User {
  id       String @id @default(cuid())
  email    String @unique @db.VarChar(50)
  password String

  // Currently, not bind resource to a specific user
  // clusters       Cluster[]
  // FilterTemplate FilterTemplate[]
  // KafkaBroker    KafkaBroker[]
}

model Cluster {
  id      String   @id @default(cuid())
  name    String   @unique
  remarks String?
  sensors Sensor[]
}

model Sensor {
  id            String           @id @default(cuid())
  ipAddr        String
  name          String           @db.VarChar(50)
  kernelName    String           @db.VarChar(100)
  kernelVersion String           @db.VarChar(50)
  arch          String           @db.VarChar(25)
  hostname      String           @db.VarChar(100)
  rootUser      String           @db.VarChar(50)
  remarks       String?
  // status        SensorStatus   @default(REQUESTED)
  cluster       Cluster          @relation(fields: [clusterId], references: [id], onDelete: Cascade)
  clusterId     String
  jobs          SensorKafkaJob[]

  @@unique([clusterId, name])
}

model SensorKafkaJob {
  id               String          @id @default(cuid())
  interval         Float
  script           String          @default("# YAML script")
  topicName        String
  brokerUrl        String
  usingTemplate    FilterTemplate? @relation(fields: [filterTemplateId], references: [id])
  filterTemplateId String?
  sensor           Sensor          @relation(fields: [sensorId], references: [id], onDelete: Cascade)
  sensorId         String
}

model FilterTemplate {
  id       String           @id @default(cuid())
  name     String
  remarks  String?
  script   String
  interval Float
  configs  SensorKafkaJob[]
}
