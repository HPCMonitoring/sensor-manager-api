name: CD

on:
  push:
    branches: ["master"]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # Image name MUST have a pattern like <org_name_lowercase>/<repo_name_lowercase>
  IMAGE_NAME: hpcmonitoring/sensor-manager-api
  IMAGE_TAG: 0.1.0
  # username login to ghcr MUST be organization's name in lower case
  ORG_USERNAME: hpcmonitoring

permissions:
  packages: write

jobs:
  deploy:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.VPS_PORT }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}

          # TODO: Remove docker volumes in Dev stage only
          script: |
            export CR_PAT=${{ secrets.GITHUB_TOKEN }}
            echo $CR_PAT | docker login ${{ env.REGISTRY }} -u ${{ env.ORG_USERNAME }} --password-stdin
            cd $HOME/HPCMonitoring/sensor-manager-api
            rm -f .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            # curl https://raw.githubusercontent.com/HPCMonitoring/sensor-manager-api/master/docker-compose.yml -o docker-compose.yml
            docker-compose pull sensor-manager-api
            if [[ "${{ vars.CLEAR_VOLUME }}" == "true" ]];
            then
              echo "Drop old database !"
              docker-compose down --volumes --remove-orphans && docker-compose up -d
            else
              echo "Use old database"
              docker-compose down && docker-compose up -d
            fi
            docker logout ${{ env.REGISTRY }}
            