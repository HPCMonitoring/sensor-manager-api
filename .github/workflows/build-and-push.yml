name: Publishing

on:
  push:
    branches: ["master"]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME: bkhpc/sensor-manager/core
  IMAGE_TAG: 0.1.0

permissions:
  packages: write

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout repository

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up env file
        run: |
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env.production
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env.production
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env.production
          echo POSTGRES_URL=postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@sensormanagerdb:5432/${{ secrets.POSTGRES_DB }}?schema=public

      # - name: Setup Docker buildx
      #   uses: docker/setup-buildx-action@v2

      # - name: Log into registry ${{ env.REGISTRY }}
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and push
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Log into registry ${{ env.REGISTRY }}
        run: |
          echo ${{ github.repository_owner }}
          echo ${{ github.actor }}
          export GHCR_PASS=${{ secrets.GITHUB_TOKEN }}
          echo $GHCR_PASS | docker login ${{ env.REGISTRY }} -u ${{ github.repository_owner }} --password-stdin

      - name: Build
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

      - name: Publish
        run: |
          docker image tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker image push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Post login into registry ${{ env.REGISTRY }}
        run: |
          docker logout ghcr.io

      - name: Post build
        run: |
          docker image prune -a
