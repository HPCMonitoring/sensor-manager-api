name: CI

on:
  pull_request:
    branches: ["master"]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [19.x]

    steps:
      - uses: actions/checkout@v3
        name: Checkout repository
        
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      
      - name: Set up env file
        run: |
          echo > .env
          echo POSTGRES_URL=${{ env.POSTGRES_URL }} > .env
          echo COOKIE_SECRET=${{ secrets.COOKIE_SECRET }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo CORS_WHITE_LIST=${{ vars.CORS_WHITE_LIST }} >> .env

      - name: Install dependencies
        run: yarn

      - name: Test
        run: yarn lint && yarn test

      - name: Build
        run: yarn build
